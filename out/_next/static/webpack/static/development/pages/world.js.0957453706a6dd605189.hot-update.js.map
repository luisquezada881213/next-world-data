{"version":3,"file":"static/webpack/static/development/pages/world.js.0957453706a6dd605189.hot-update.js","sources":["webpack:///./containers/Container.Main.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\n// import material ui components\nimport Grid from '@material-ui/core/Grid';\n\n// import components\nimport ComponentLoading from '../components/Component.Loading'\nimport ComponentError from '../components/Component.Error'\nimport ComponentCountryList from '../components/Component.CountryList'\nimport ComponentMap from '../components/Component.Map'\nimport ComponentCountryInformation from '../components/Component.CountryInformation'\nimport ComponentCountryPopulation from '../components/Component.CountryPopulation'\n\n// import clients\nimport { fetchCountryData } from '../clients/client.countries'\n\nfunction ContainerMain() {\n\n    const [countryData, setCountryData] = useState({\n        data: {},\n        status: 'loading',\n    })\n\n    const [selectedCountry, setSelectedCountry] = useState(null)\n\n    /* ComponentDidMount */\n    useEffect(() => {\n        fetchCountryData().then(response => {\n            setCountryData({\n                data: response.data,\n                status: 'success',\n            })\n        }).catch(error => {\n            setCountryData({\n                data: null,\n                status: 'error'\n            })\n        })\n    }, []);\n\n    switch (countryData.status) {\n        case 'loading':\n            return <ComponentLoading />\n        case 'success':\n            return (\n                <div className=\"world-main-container\">\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"flex-start\"\n                        alignItems=\"stretch\"\n                    >\n                        {/* country list */}\n                        <Grid\n                            item\n                            container\n                            direction=\"column\"\n                            justify=\"space-evenly\"\n                            alignItems=\"center\"\n                            xs={1}\n                            className=\"world-main-container-flags\"\n                        >\n                            <ComponentCountryList\n                                countryData={countryData}\n                                setSelectedCountry={setSelectedCountry}\n                                selectedCountry={selectedCountry}\n                            />\n                        </Grid>\n                        {/* map */}\n                        <Grid\n                            item\n                            container\n                            direction=\"column\"\n                            justify=\"space-evenly\"\n                            alignItems=\"center\"\n                            xs={1} className=\"world-main-container-map\" item xs={5}>\n                            <ComponentMap\n                                selectedCountry={selectedCountry}\n                            />\n                        </Grid>\n                        <Grid item xs={6} className=\"world-main-container-right\">\n                            {/* Country Information */}\n                            <Grid>\n                                <ComponentCountryInformation\n                                    selectedCountry={selectedCountry}\n                                    countryData={countryData}\n                                />\n                            </Grid>\n                            <Grid>\n                                <h3>Population projection</h3>\n                                <div>\n                                    <ComponentCountryPopulation\n                                        selectedCountry={selectedCountry}\n                                    />\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            )\n        case 'error':\n            return <ComponentError />\n        default:\n            return <ComponentError />\n    }\n}\n\nexport default ContainerMain"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAFA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAQA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/DA;AAiEA;AACA;AACA;;;;A","sourceRoot":""}