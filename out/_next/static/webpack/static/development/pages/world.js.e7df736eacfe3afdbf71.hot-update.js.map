{"version":3,"file":"static/webpack/static/development/pages/world.js.e7df736eacfe3afdbf71.hot-update.js","sources":["webpack:///./components/Component.CountryPopulation.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport * as d3 from 'd3'\n\nfunction showData(selectedCountry) {\n\n    if (selectedCountry) {\n\n        let normPopData = []\n\n        Object.keys(selectedCountry.population).map(element => {\n            if (+element) {\n                normPopData.push({\n                    \"year\": element,\n                    \"population\": Number(selectedCountry.population[element].replace(/,/g, ''))\n                })\n            }\n        })\n\n        // console.log(normPopData)\n\n        let body = d3.select(\"#country-population-body\")\n\n        let xAxisBody = d3.select(\"#country-population-xAxis\")\n        let yAxisBody = d3.select(\"#country-population-yAxis\")\n\n        let max = d3.max(normPopData, d => d.population)\n\n        // console.log(max)\n\n        let widthScale = d3.scaleLinear()\n            .range([0, 450])\n            .domain([0, max])\n\n        let domain = normPopData.map(d => d.year)\n\n        // console.log(domain)\n\n        let positionScale = d3.scaleBand()\n            .range([0, 200])\n            .domain(domain)\n            .padding(0.3)\n\n        let join = body\n            .selectAll(\"rect\")\n            .data(normPopData)\n\n        let newElements = join.enter()\n            .append(\"rect\")\n            .attr(\"fill\", \"blue\")\n            .attr(\"width\", d => widthScale(d.population))\n            .attr(\"height\", positionScale.bandwidth())\n            .attr(\"y\", d => positionScale(d.year))\n            .style(\"transform\", \"translate(20px, 0px)\")\n\n        join.merge(newElements).transition()\n            .attr(\"fill\", \"#6A5ACD\")\n            .attr(\"width\", d => widthScale(d.population))\n            .attr(\"height\", positionScale.bandwidth())\n            .attr(\"y\", d => positionScale(d.year))\n            .style(\"transform\", \"translate(45px, 0px)\")\n\n        join.exit().remove()\n\n\n        let xAxis = d3.axisBottom()\n            .scale(widthScale)\n            .ticks(7)\n\n        let yAxis = d3.axisLeft()\n            .scale(positionScale)\n\n        xAxisBody.transition()\n            .call(xAxis)\n            .style(\"transform\", \"translate(45px, 200px)\")\n\n        yAxisBody.transition()\n            .call(yAxis)\n            .style(\"transform\", \"translate(40px, 0px)\")\n\n    }\n}\n\nfunction ComponentCountryPopulation({ selectedCountry }) {\n\n    useEffect(() => {\n        showData(selectedCountry)\n    }, [selectedCountry])\n\n    return (\n        <React.Fragment>\n            <svg id=\"country-population-body\">\n                <g id=\"country-population-xAxis\"></g>\n                <g id=\"country-population-yAxis\"></g>\n            </svg>\n        </React.Fragment>\n    )\n}\nexport default ComponentCountryPopulation "],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAGA;AAIA;AAAA;AAAA;AACA;AAGA;AAKA;AAIA;AAGA;AAAA;AAEA;AAAA;AAGA;AAEA;AAAA;AAEA;AAAA;AAGA;AAGA;AAIA;AAGA;AAIA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;;;;A","sourceRoot":""}